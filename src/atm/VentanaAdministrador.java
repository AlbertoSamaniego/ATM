/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atm;

import bases_datos.Conexion;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alberto
 */
public class VentanaAdministrador extends JFrame {

    private int administrador;

    /**
     * Creates new form VentanaAdministrador
     */
    public VentanaAdministrador(int administrador) {
        this.administrador = administrador;
        clientes = new ArrayList<>();
        cuentas = new ArrayList<>();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setPreferredSize(new Dimension(770, 490));
        setLocation(600, 200);
        initComponents();
        initBD();
        initClientes();
        initCuentas();
        moverPantalla(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedor = new javax.swing.JTabbedPane();
        paginaPrincipal = new javax.swing.JPanel();
        lblFondo = new javax.swing.JLabel();
        darAltaUsuario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaClientes = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txfDNI = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txfNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txfApellido1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txfApellido2 = new javax.swing.JTextField();
        btnAddCliente = new javax.swing.JButton();
        darBajaUsuario = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnEliminarCliente = new javax.swing.JButton();
        darAltaCuenta = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCuentaBancaria = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txfAddIban = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txfAddIbanDni = new javax.swing.JTextField();
        btnAddCuenta = new javax.swing.JButton();
        darBajaCuenta = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaCuentasEliminar = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        txfClienteCuentaEliminar = new javax.swing.JTextField();
        txfIBANEliminar = new javax.swing.JTextField();
        txfCuentaSaldoEliminar = new javax.swing.JTextField();
        btnEliminarCuenta = new javax.swing.JButton();
        bloquearDesbloquearCuenta = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaCuentasBloquDesbloqu = new javax.swing.JTable();
        btnBloquearCuenta = new javax.swing.JButton();
        btnDesbloquearCuenta = new javax.swing.JButton();
        darAltaTarjeta = new javax.swing.JPanel();
        darBajaTarjeta = new javax.swing.JPanel();
        bloquearDesbloquearTarjeta = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnAltaUsuario = new javax.swing.JMenuItem();
        btnBajaUsuario = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        btnAltaCuenta = new javax.swing.JMenuItem();
        btnBajaCuenta = new javax.swing.JMenuItem();
        btnBloquDesbloquCuenta = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        btnAltaTarjeta = new javax.swing.JMenuItem();
        btnBajaTarjeta = new javax.swing.JMenuItem();
        btnBloquearTarjeta = new javax.swing.JMenuItem();
        btnDesbloquearTarjeta = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        btnRellenarCajero = new javax.swing.JMenuItem();
        btnApagarCajero = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador ATM");
        setResizable(false);

        contenedor.setTabPlacement(javax.swing.JTabbedPane.RIGHT);

        lblFondo.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+"\\src\\ATM_Images\\logAdmin.png"));

        javax.swing.GroupLayout paginaPrincipalLayout = new javax.swing.GroupLayout(paginaPrincipal);
        paginaPrincipal.setLayout(paginaPrincipalLayout);
        paginaPrincipalLayout.setHorizontalGroup(
            paginaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
        );
        paginaPrincipalLayout.setVerticalGroup(
            paginaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFondo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );

        contenedor.addTab("tab1", paginaPrincipal);

        darAltaUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        listaClientes.setModel(new javax.swing.DefaultListModel<Cliente>()
        );
        listaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaClientes);

        jPanel1.setLayout(new java.awt.GridLayout(4, 2, 20, 10));

        jLabel1.setText("DNI");
        jPanel1.add(jLabel1);

        txfDNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfDNIFocusGained(evt);
            }
        });
        txfDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfDNIKeyTyped(evt);
            }
        });
        jPanel1.add(txfDNI);

        jLabel2.setText("Nombre");
        jPanel1.add(jLabel2);

        txfNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfNombreFocusGained(evt);
            }
        });
        jPanel1.add(txfNombre);

        jLabel3.setText("Apellido principal");
        jPanel1.add(jLabel3);

        txfApellido1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfApellido1FocusGained(evt);
            }
        });
        jPanel1.add(txfApellido1);

        jLabel4.setText("Apellido Secundario");
        jPanel1.add(jLabel4);

        txfApellido2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txfApellido2FocusGained(evt);
            }
        });
        jPanel1.add(txfApellido2);

        btnAddCliente.setText("Dar de alta");
        btnAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout darAltaUsuarioLayout = new javax.swing.GroupLayout(darAltaUsuario);
        darAltaUsuario.setLayout(darAltaUsuarioLayout);
        darAltaUsuarioLayout.setHorizontalGroup(
            darAltaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darAltaUsuarioLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(darAltaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darAltaUsuarioLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(btnAddCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(darAltaUsuarioLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        darAltaUsuarioLayout.setVerticalGroup(
            darAltaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darAltaUsuarioLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(darAltaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(darAltaUsuarioLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnAddCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        contenedor.addTab("tab2", darAltaUsuario);

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Nombre", "Apellido principal", "Apellido secundario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaClientes);

        btnEliminarCliente.setText("Dar de baja");
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout darBajaUsuarioLayout = new javax.swing.GroupLayout(darBajaUsuario);
        darBajaUsuario.setLayout(darBajaUsuarioLayout);
        darBajaUsuarioLayout.setHorizontalGroup(
            darBajaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darBajaUsuarioLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(darBajaUsuarioLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        darBajaUsuarioLayout.setVerticalGroup(
            darBajaUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, darBajaUsuarioLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        contenedor.addTab("tab3", darBajaUsuario);

        tablaCuentaBancaria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "IBAN", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaCuentaBancaria);

        jPanel2.setLayout(new java.awt.GridLayout(4, 1, 0, 20));

        jLabel5.setText("IBAN:");
        jPanel2.add(jLabel5);

        txfAddIban.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfAddIbanKeyTyped(evt);
            }
        });
        jPanel2.add(txfAddIban);

        jLabel6.setText("DNI propietario de la cuenta:");
        jPanel2.add(jLabel6);

        txfAddIbanDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txfAddIbanDniKeyTyped(evt);
            }
        });
        jPanel2.add(txfAddIbanDni);

        btnAddCuenta.setText("Dar de alta cuenta bancaria");
        btnAddCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout darAltaCuentaLayout = new javax.swing.GroupLayout(darAltaCuenta);
        darAltaCuenta.setLayout(darAltaCuentaLayout);
        darAltaCuentaLayout.setHorizontalGroup(
            darAltaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darAltaCuentaLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(darAltaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        darAltaCuentaLayout.setVerticalGroup(
            darAltaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darAltaCuentaLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(darAltaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addComponent(btnAddCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        contenedor.addTab("tab4", darAltaCuenta);

        tablaCuentasEliminar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "IBAN", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCuentasEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCuentasEliminarMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaCuentasEliminar);

        jPanel3.setLayout(new java.awt.GridLayout(3, 1, 0, 30));
        jPanel3.add(txfClienteCuentaEliminar);
        jPanel3.add(txfIBANEliminar);
        jPanel3.add(txfCuentaSaldoEliminar);

        btnEliminarCuenta.setText("Dar de baja cuenta bancaria");
        btnEliminarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout darBajaCuentaLayout = new javax.swing.GroupLayout(darBajaCuenta);
        darBajaCuenta.setLayout(darBajaCuentaLayout);
        darBajaCuentaLayout.setHorizontalGroup(
            darBajaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darBajaCuentaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(darBajaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarCuenta))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        darBajaCuentaLayout.setVerticalGroup(
            darBajaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(darBajaCuentaLayout.createSequentialGroup()
                .addGroup(darBajaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(darBajaCuentaLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(darBajaCuentaLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(12, 12, 12)
                .addComponent(btnEliminarCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        contenedor.addTab("tab5", darBajaCuenta);

        tablaCuentasBloquDesbloqu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "IBAN", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablaCuentasBloquDesbloqu);

        btnBloquearCuenta.setText("Bloquear");
        btnBloquearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquearCuentaActionPerformed(evt);
            }
        });

        btnDesbloquearCuenta.setText("Desbloquear");
        btnDesbloquearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesbloquearCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bloquearDesbloquearCuentaLayout = new javax.swing.GroupLayout(bloquearDesbloquearCuenta);
        bloquearDesbloquearCuenta.setLayout(bloquearDesbloquearCuentaLayout);
        bloquearDesbloquearCuentaLayout.setHorizontalGroup(
            bloquearDesbloquearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bloquearDesbloquearCuentaLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(bloquearDesbloquearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBloquearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDesbloquearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        bloquearDesbloquearCuentaLayout.setVerticalGroup(
            bloquearDesbloquearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bloquearDesbloquearCuentaLayout.createSequentialGroup()
                .addGroup(bloquearDesbloquearCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bloquearDesbloquearCuentaLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(bloquearDesbloquearCuentaLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(btnBloquearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnDesbloquearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        contenedor.addTab("tab6", bloquearDesbloquearCuenta);

        javax.swing.GroupLayout darAltaTarjetaLayout = new javax.swing.GroupLayout(darAltaTarjeta);
        darAltaTarjeta.setLayout(darAltaTarjetaLayout);
        darAltaTarjetaLayout.setHorizontalGroup(
            darAltaTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        darAltaTarjetaLayout.setVerticalGroup(
            darAltaTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        contenedor.addTab("tab7", darAltaTarjeta);

        javax.swing.GroupLayout darBajaTarjetaLayout = new javax.swing.GroupLayout(darBajaTarjeta);
        darBajaTarjeta.setLayout(darBajaTarjetaLayout);
        darBajaTarjetaLayout.setHorizontalGroup(
            darBajaTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        darBajaTarjetaLayout.setVerticalGroup(
            darBajaTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        contenedor.addTab("tab8", darBajaTarjeta);

        javax.swing.GroupLayout bloquearDesbloquearTarjetaLayout = new javax.swing.GroupLayout(bloquearDesbloquearTarjeta);
        bloquearDesbloquearTarjeta.setLayout(bloquearDesbloquearTarjetaLayout);
        bloquearDesbloquearTarjetaLayout.setHorizontalGroup(
            bloquearDesbloquearTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        bloquearDesbloquearTarjetaLayout.setVerticalGroup(
            bloquearDesbloquearTarjetaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        contenedor.addTab("tab9", bloquearDesbloquearTarjeta);

        jMenu1.setText("Administrar usuarios");

        btnAltaUsuario.setText("Dar de alta usuario");
        btnAltaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(btnAltaUsuario);

        btnBajaUsuario.setText("Dar de baja usuario");
        btnBajaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(btnBajaUsuario);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Administrar cuentas bancarias");

        btnAltaCuenta.setText("Dar de alta cuenta");
        btnAltaCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaCuentaActionPerformed(evt);
            }
        });
        jMenu2.add(btnAltaCuenta);

        btnBajaCuenta.setText("Dar de baja cuenta");
        btnBajaCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaCuentaActionPerformed(evt);
            }
        });
        jMenu2.add(btnBajaCuenta);

        btnBloquDesbloquCuenta.setText("Bloquear/Desbloquear cuenta");
        btnBloquDesbloquCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquDesbloquCuentaActionPerformed(evt);
            }
        });
        jMenu2.add(btnBloquDesbloquCuenta);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Administrar tarjetas");

        btnAltaTarjeta.setText("Dar de alta tarjeta");
        btnAltaTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaTarjetaActionPerformed(evt);
            }
        });
        jMenu3.add(btnAltaTarjeta);

        btnBajaTarjeta.setText("Dar de baja tarjeta");
        btnBajaTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaTarjetaActionPerformed(evt);
            }
        });
        jMenu3.add(btnBajaTarjeta);

        btnBloquearTarjeta.setText("Bloquear tarjeta");
        btnBloquearTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBloquearTarjetaActionPerformed(evt);
            }
        });
        jMenu3.add(btnBloquearTarjeta);

        btnDesbloquearTarjeta.setText("Desbloquear tarjeta");
        btnDesbloquearTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesbloquearTarjetaActionPerformed(evt);
            }
        });
        jMenu3.add(btnDesbloquearTarjeta);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Administrar cajero");

        btnRellenarCajero.setText("Rellenar cajero");
        btnRellenarCajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRellenarCajeroActionPerformed(evt);
            }
        });
        jMenu4.add(btnRellenarCajero);

        btnApagarCajero.setText("Apagar cajero");
        btnApagarCajero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarCajeroActionPerformed(evt);
            }
        });
        jMenu4.add(btnApagarCajero);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Salir");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAltaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaUsuarioActionPerformed
        moverPantalla(1);
        initListaClientes();
    }//GEN-LAST:event_btnAltaUsuarioActionPerformed

    private void btnBajaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaUsuarioActionPerformed
        moverPantalla(2);
        initTablaClientes();
    }//GEN-LAST:event_btnBajaUsuarioActionPerformed

    private void btnAltaCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaCuentaActionPerformed
        moverPantalla(3);
        initTablaCuentas();
    }//GEN-LAST:event_btnAltaCuentaActionPerformed

    private void btnBajaCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaCuentaActionPerformed
        moverPantalla(4);
        initTablaCuentas2();
    }//GEN-LAST:event_btnBajaCuentaActionPerformed

    private void btnBloquDesbloquCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquDesbloquCuentaActionPerformed
        moverPantalla(5);
        initTablaBloqueos();
    }//GEN-LAST:event_btnBloquDesbloquCuentaActionPerformed

    private void btnAltaTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaTarjetaActionPerformed

    }//GEN-LAST:event_btnAltaTarjetaActionPerformed

    private void btnBajaTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaTarjetaActionPerformed

    }//GEN-LAST:event_btnBajaTarjetaActionPerformed

    private void btnBloquearTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquearTarjetaActionPerformed

    }//GEN-LAST:event_btnBloquearTarjetaActionPerformed

    private void btnDesbloquearTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesbloquearTarjetaActionPerformed

    }//GEN-LAST:event_btnDesbloquearTarjetaActionPerformed

    private void btnRellenarCajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRellenarCajeroActionPerformed

    }//GEN-LAST:event_btnRellenarCajeroActionPerformed

    private void btnApagarCajeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarCajeroActionPerformed

    }//GEN-LAST:event_btnApagarCajeroActionPerformed

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jMenu5MouseClicked

    private void btnAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClienteActionPerformed
        String dni = txfDNI.getText();
        String nombre = txfNombre.getText();
        String apellido1 = txfApellido1.getText();
        String apellido2 = txfApellido2.getText();
        Cliente c = new Cliente(dni, nombre, apellido1, apellido2, administrador);
        if (dni.equals("") || nombre.equals("") || apellido1.equals("") || apellido2.equals("")) {
            JOptionPane.showMessageDialog(this, "Por favor, rellene todos los campos", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            if (clientes.contains(c)) {
                JOptionPane.showMessageDialog(this, "El cliente ya está registrado en el sistema", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                String insertCliente = "INSERT into cliente values ('" + dni + "','" + nombre + "','" + apellido1 + "','" + apellido2 + "'," + administrador + ");";
                try {
                    sentencia.executeUpdate(insertCliente);
                    modeloListaClientes.addElement(c);
                    clientes.add(c);
                    txfDNI.setText("");
                    txfNombre.setText("");
                    txfApellido1.setText("");
                    txfApellido2.setText("");
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_btnAddClienteActionPerformed

    private void listaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaClientesMouseClicked
        Cliente c = listaClientes.getSelectedValue();
        txfDNI.setText(c.getDni());
        txfNombre.setText(c.getNombre());
        txfApellido1.setText(c.getApellido1());
        txfApellido2.setText(c.getApellido2());
    }//GEN-LAST:event_listaClientesMouseClicked

    private void txfDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfDNIKeyTyped
        if (txfDNI.getText().length() == 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txfDNIKeyTyped

    private void txfDNIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfDNIFocusGained
        txfDNI.setText("");
    }//GEN-LAST:event_txfDNIFocusGained

    private void txfNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfNombreFocusGained
        txfNombre.setText("");
    }//GEN-LAST:event_txfNombreFocusGained

    private void txfApellido1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfApellido1FocusGained
        txfApellido1.setText("");
    }//GEN-LAST:event_txfApellido1FocusGained

    private void txfApellido2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfApellido2FocusGained
        txfApellido2.setText("");
    }//GEN-LAST:event_txfApellido2FocusGained

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        int filaSelec = tablaClientes.getSelectedRow();
        if (filaSelec != -1) {
            String dni = (String) modeloTablaClientes.getValueAt(filaSelec, 0);
            String nombre = (String) modeloTablaClientes.getValueAt(filaSelec, 1);
            String apellido1 = (String) modeloTablaClientes.getValueAt(filaSelec, 2);
            String apellido2 = (String) modeloTablaClientes.getValueAt(filaSelec, 3);
            Cliente c = new Cliente(dni, nombre, apellido1, apellido2, administrador);
            modeloTablaClientes.removeRow(filaSelec);
            clientes.remove(c);
            try {
                String deleteCliente = "delete from cliente where dni = '" + c.getDni() + "';";
                sentencia.executeUpdate(deleteCliente);
            } catch (SQLException ex) {
                Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnAddCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCuentaActionPerformed
        if (txfAddIban.getText().equals("") || txfAddIbanDni.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Rellene los datos por favor", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            Cliente c = new Cliente(txfAddIbanDni.getText());
            if (clientes.contains(c)) {
                CuentaBancaria cb = new CuentaBancaria(txfAddIban.getText(), 0.0, false, txfAddIbanDni.getText(), administrador);
                String insertCuenta = "insert into cuenta_bancaria(iban, dniCliente, numeroAdministrador) VALUES ('" + txfAddIban.getText() + "', '" + txfAddIbanDni.getText() + "', " + administrador + ");";
                cuentas.add(cb);
                Object[] filaNueva = {cb.getDniCliente(), cb.getIban(), cb.getSaldo()};
                modeloTablaCuentas.addRow(filaNueva);
                try {
                    sentencia.executeUpdate(insertCuenta);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El cliente no existe", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnAddCuentaActionPerformed

    private void txfAddIbanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfAddIbanKeyTyped
        if (txfAddIban.getText().length() == 28) {
            evt.consume();
        }
    }//GEN-LAST:event_txfAddIbanKeyTyped

    private void txfAddIbanDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txfAddIbanDniKeyTyped
        if (txfAddIbanDni.getText().length() == 9) {
            evt.consume();
        }
    }//GEN-LAST:event_txfAddIbanDniKeyTyped

    private void btnEliminarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCuentaActionPerformed
        int filaSelec = tablaCuentasEliminar.getSelectedRow();
        if (filaSelec != -1) {
            String iban = (String) modeloTablaCuentas.getValueAt(filaSelec, 1);
            CuentaBancaria cbEliminar = new CuentaBancaria(iban);
            cuentas.remove(cbEliminar);
            modeloTablaCuentas.removeRow(filaSelec);
            String deleteCuenta = "delete from cuenta_bancaria where iban ='"+iban+"'";
            try {
                sentencia.executeUpdate(deleteCuenta);
            } catch (SQLException ex) {
                Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEliminarCuentaActionPerformed

    private void tablaCuentasEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCuentasEliminarMouseClicked
        txfClienteCuentaEliminar.setText("");
        txfIBANEliminar.setText("");
        txfCuentaSaldoEliminar.setText("");
        int filaSelec = tablaCuentasEliminar.getSelectedRow();
        if (filaSelec != -1) {
            String dni = (String) modeloTablaCuentas.getValueAt(filaSelec, 0);
            String iban = (String) modeloTablaCuentas.getValueAt(filaSelec, 1);
            double saldo = (double) modeloTablaCuentas.getValueAt(filaSelec, 2);
            txfClienteCuentaEliminar.setText(dni);
            txfIBANEliminar.setText(iban);
            txfCuentaSaldoEliminar.setText(String.valueOf(saldo));
        }

    }//GEN-LAST:event_tablaCuentasEliminarMouseClicked

    private void btnBloquearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBloquearCuentaActionPerformed
        int filaSelec = tablaCuentasBloquDesbloqu.getSelectedRow();
        if (filaSelec != -1) {
            String bloqueada = (String) modeloTablaCuentas.getValueAt(filaSelec, 2);
            String iban = (String) modeloTablaCuentas.getValueAt(filaSelec,1);
            if(bloqueada.equals("Desbloqueada")){
                bloqueada = "Bloqueada";
                modeloTablaCuentas.setValueAt(bloqueada, filaSelec, 2);
                String updateCuenta = "update cuenta_bancaria set bloqueada=1 where iban='"+iban+"';";
                try {
                    sentencia.executeUpdate(updateCuenta);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnBloquearCuentaActionPerformed

    private void btnDesbloquearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesbloquearCuentaActionPerformed
        int filaSelec = tablaCuentasBloquDesbloqu.getSelectedRow();
        if (filaSelec != -1) {
            String bloqueada = (String) modeloTablaCuentas.getValueAt(filaSelec, 2);
            String iban = (String) modeloTablaCuentas.getValueAt(filaSelec,1);
            if(bloqueada.equals("Bloqueada")){
                bloqueada = "Desbloqueada";
                modeloTablaCuentas.setValueAt(bloqueada, filaSelec, 2);
                String updateCuenta = "update cuenta_bancaria set bloqueada=0 where iban='"+iban+"'";
                try {
                    sentencia.executeUpdate(updateCuenta);
                } catch (SQLException ex) {
                    Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnDesbloquearCuentaActionPerformed

    private void initCuentas() {
        String consulta = "SELECT cb.* from cliente c join cuenta_bancaria cb on c.dni=cb.dniCliente order by c.dni;";
        try {
            resultado = sentencia.executeQuery(consulta);
            while (resultado.next()) {
                String iban = resultado.getString("iban");
                double saldo = Math.round(resultado.getDouble("saldo") * 100.0) / 100.0;
                boolean bloqueada = resultado.getBoolean("bloqueada");
                String dniCliente = resultado.getString("dniCliente");
                int admin = resultado.getInt("numeroAdministrador");
                CuentaBancaria cb = new CuentaBancaria(iban, saldo, bloqueada, dniCliente, admin);
                cuentas.add(cb);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initTablaBloqueos(){
        modeloTablaCuentas = (DefaultTableModel) tablaCuentasBloquDesbloqu.getModel();
        tablaCuentasBloquDesbloqu.setModel(modeloTablaCuentas);
        tablaCuentasBloquDesbloqu.getColumnModel().getColumn(0).setPreferredWidth(130);
        tablaCuentasBloquDesbloqu.getColumnModel().getColumn(1).setPreferredWidth(310);
        tablaCuentasBloquDesbloqu.getColumnModel().getColumn(2).setPreferredWidth(130);
        modeloTablaCuentas.setRowCount(0);
        String bloqueada;
        for (CuentaBancaria cb : cuentas) {
            if(cb.isBloqueada()){
                bloqueada = "Bloqueada";
            }else{
                bloqueada = "Desbloqueada";
            }
            Object[] fila = {cb.getDniCliente(), cb.getIban(), bloqueada};
            modeloTablaCuentas.addRow(fila);
        }
    }
    
    private void initTablaCuentas() {
        modeloTablaCuentas = (DefaultTableModel) tablaCuentaBancaria.getModel();
        tablaCuentaBancaria.setModel(modeloTablaCuentas);
        tablaCuentaBancaria.getColumnModel().getColumn(0).setPreferredWidth(130);
        tablaCuentaBancaria.getColumnModel().getColumn(1).setPreferredWidth(310);
        tablaCuentaBancaria.getColumnModel().getColumn(2).setPreferredWidth(100);
        modeloTablaCuentas.setRowCount(0);

        for (CuentaBancaria cb : cuentas) {
            Object[] fila = {cb.getDniCliente(), cb.getIban(), cb.getSaldo()};
            modeloTablaCuentas.addRow(fila);
        }
    }

    private void initTablaCuentas2() {
        modeloTablaCuentas = (DefaultTableModel) tablaCuentasEliminar.getModel();
        tablaCuentasEliminar.setModel(modeloTablaCuentas);
        tablaCuentasEliminar.getColumnModel().getColumn(0).setPreferredWidth(130);
        tablaCuentasEliminar.getColumnModel().getColumn(1).setPreferredWidth(310);
        tablaCuentasEliminar.getColumnModel().getColumn(2).setPreferredWidth(100);
        modeloTablaCuentas.setRowCount(0);

        for (CuentaBancaria cb : cuentas) {
            Object[] fila = {cb.getDniCliente(), cb.getIban(), cb.getSaldo()};
            modeloTablaCuentas.addRow(fila);
        }
    }

    private void initClientes() {
        try {
            sentencia = conexion.createStatement();
            String consulta = "SELECT * FROM cliente;";
            resultado = sentencia.executeQuery(consulta);
            while (resultado.next()) {
                String dni = resultado.getString("dni");
                String nombre = resultado.getString("nombre");
                String apellido1 = resultado.getString("apellido1");
                String apellido2 = resultado.getString("apellido2");
                int admin = resultado.getInt("numeroAdministrador");
                Cliente c = new Cliente(dni, nombre, apellido1, apellido2, admin);
                clientes.add(c);
            }
        } catch (SQLException ex) {
            Logger.getLogger(VentanaAdministrador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initListaClientes() {
        modeloListaClientes = (DefaultListModel) listaClientes.getModel();
        modeloListaClientes.removeAllElements();
        for (Cliente c : clientes) {
            modeloListaClientes.addElement(c);
        }

    }

    private void initTablaClientes() {
        modeloTablaClientes = (DefaultTableModel) tablaClientes.getModel();
        tablaClientes.setModel(modeloTablaClientes);
        modeloTablaClientes.setRowCount(0);

        for (Cliente c : clientes) {
            Object[] fila = {c.getDni(), c.getNombre(), c.getApellido1(), c.getApellido2()};
            modeloTablaClientes.addRow(fila);
        }
    }

    private void initBD() {
        conexion = Conexion.mySQL("atm", "root", "");
        if (conexion == null) {
            JOptionPane.showMessageDialog(this, "No hay acceso a la base de datos", "ERROR", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }

    private void moverPantalla(int pant) {
        contenedor.setSelectedIndex(pant);
        pantalla = contenedor.getSelectedIndex();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAdministrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int numAdmin = 5572;
                new VentanaAdministrador(numAdmin).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bloquearDesbloquearCuenta;
    private javax.swing.JPanel bloquearDesbloquearTarjeta;
    private javax.swing.JButton btnAddCliente;
    private javax.swing.JButton btnAddCuenta;
    private javax.swing.JMenuItem btnAltaCuenta;
    private javax.swing.JMenuItem btnAltaTarjeta;
    private javax.swing.JMenuItem btnAltaUsuario;
    private javax.swing.JMenuItem btnApagarCajero;
    private javax.swing.JMenuItem btnBajaCuenta;
    private javax.swing.JMenuItem btnBajaTarjeta;
    private javax.swing.JMenuItem btnBajaUsuario;
    private javax.swing.JMenuItem btnBloquDesbloquCuenta;
    private javax.swing.JButton btnBloquearCuenta;
    private javax.swing.JMenuItem btnBloquearTarjeta;
    private javax.swing.JButton btnDesbloquearCuenta;
    private javax.swing.JMenuItem btnDesbloquearTarjeta;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnEliminarCuenta;
    private javax.swing.JMenuItem btnRellenarCajero;
    private javax.swing.JTabbedPane contenedor;
    private javax.swing.JPanel darAltaCuenta;
    private javax.swing.JPanel darAltaTarjeta;
    private javax.swing.JPanel darAltaUsuario;
    private javax.swing.JPanel darBajaCuenta;
    private javax.swing.JPanel darBajaTarjeta;
    private javax.swing.JPanel darBajaUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JList<Cliente> listaClientes;
    private javax.swing.JPanel paginaPrincipal;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTable tablaCuentaBancaria;
    private javax.swing.JTable tablaCuentasBloquDesbloqu;
    private javax.swing.JTable tablaCuentasEliminar;
    private javax.swing.JTextField txfAddIban;
    private javax.swing.JTextField txfAddIbanDni;
    private javax.swing.JTextField txfApellido1;
    private javax.swing.JTextField txfApellido2;
    private javax.swing.JTextField txfClienteCuentaEliminar;
    private javax.swing.JTextField txfCuentaSaldoEliminar;
    private javax.swing.JTextField txfDNI;
    private javax.swing.JTextField txfIBANEliminar;
    private javax.swing.JTextField txfNombre;
    // End of variables declaration//GEN-END:variables
    private int pantalla;
    Connection conexion;
    Statement sentencia;
    ResultSet resultado;
    private ArrayList<Cliente> clientes;
    private ArrayList<CuentaBancaria> cuentas;
    DefaultListModel<Cliente> modeloListaClientes;
    DefaultTableModel modeloTablaClientes;
    DefaultTableModel modeloTablaCuentas;
}
